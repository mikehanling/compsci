----------------------------------------------------------------------------
Name:  Mike Hanling
Alpha: 202430

Collaborator(s): None

Resources Used: Class Website

Hours: 2
----------------------------------------------------------------------------
  Replace the X's above with your name and alpha, and also list any collaborator
  or other resources you used. Please also indicate the number of hours
  (including hours in the lab period) you spent on this assignment.

  After completing the assignment, please answer these questions to provide
  feedback.

  * What did you learn from this assignment?
      Many useful tools on the command line (^C+l).

  * What part of the assignment was easier then you expected?
      The challenges ended up not being too bad...but a very good
      thought experiment.

  * What part of the assignment was harder then you expected?
      how much you can do with ls

  * What would you suggest for improving this assignment?
      A few more challenging problems.

  * Any additional information you'd like to share regarding this assignment?
      I definitely already feel more comfortable after hearing people
      who code all the time.

----------------------------------------------------------------------------

  Below, fill out this worksheet with the appropriate answers following the
  questions.

  Feel free to add extra whitespace as needed, but please leave the
  general questions and worksheets intact. 
  
  This worksheet will be submitted electronically with your
  submission. Instructions for submission are found on the lab page.

----------------------------------------------------------------------------
Part 1: The Man Pages  (___/25)


   (5/3/0)
   1. For the =ls= command, what option prints information out in long
      form, like =-l=, but does not print any file ownership
      information? In the worksheet, provide a copy of the output
      using =ls= with this option run from the *top level* of the lab
      directory.

         total 24
         drwxr-xr-x 2 mids 4096 Jan 12 13:07 part1
         drwxr-xr-x 2 mids 4096 Jan 12 13:07 part2
         drwxr-xr-x 2 mids 4096 Jan 12 13:07 part3
         drwxr-xr-x 2 mids 4096 Jan 12 13:07 part4
         -rw-r--r-- 1 mids 5591 Jan 12 13:07 worksheet.txt
   
   2. Change into the =part1= directory and type =ls=. You will see a
      list of files =a b c d e f g=. 
   
      (4/2/0)   
      a. Note that =ls= lists the files in alphabetic order. What =ls=
         option will list the files in /reverse/ alphabetic order? Provide
         a copy of your output of your =ls= with the addition of =-l=
         in your worksheet.
 
            -r
            $: ls -rl            
            total 108
            -rw-r--r-- 1 m202430 mids  9894 Jan 12 13:07 g
            -rw-r--r-- 1 m202430 mids 13946 Jan 12 13:07 f
            -rw-r--r-- 1 m202430 mids 16989 Jan 12 13:07 e
            -rw-r--r-- 1 m202430 mids 22156 Jan 12 13:07 d
            -rw-r--r-- 1 m202430 mids 12214 Jan 12 13:07 c
            -rw-r--r-- 1 m202430 mids 12322 Jan 12 13:07 b
            -rw-r--r-- 1 m202430 mids  6091 Jan 12 13:07 a

      (3/1/0)   
      b. What =ls= options will sort the files by /size/ from largest
         to smallest? Provide a copy of your output of your =ls= with
         the addition of =-l= in your worksheet.

            -S
            $: ls -Sl
            total 108
            -rw-r--r-- 1 m202430 mids 22156 Jan 12 13:07 d
            -rw-r--r-- 1 m202430 mids 16989 Jan 12 13:07 e
            -rw-r--r-- 1 m202430 mids 13946 Jan 12 13:07 f
            -rw-r--r-- 1 m202430 mids 12322 Jan 12 13:07 b
            -rw-r--r-- 1 m202430 mids 12214 Jan 12 13:07 c
            -rw-r--r-- 1 m202430 mids  9894 Jan 12 13:07 g
            -rw-r--r-- 1 m202430 mids  6091 Jan 12 13:07 a

      (3/1/0)   
      c. What =ls= option will sort the files in /reverse size/ order
         from smallest to largest. Provide a copy of your output of
         your =ls= with the addition of =-l= in your worksheet.

            -Sr
            $: ls -Srl
            total 108
            -rw-r--r-- 1 m202430 mids  6091 Jan 12 13:07 a
            -rw-r--r-- 1 m202430 mids  9894 Jan 12 13:07 g
            -rw-r--r-- 1 m202430 mids 12214 Jan 12 13:07 c
            -rw-r--r-- 1 m202430 mids 12322 Jan 12 13:07 b
            -rw-r--r-- 1 m202430 mids 13946 Jan 12 13:07 f
            -rw-r--r-- 1 m202430 mids 16989 Jan 12 13:07 e
            -rw-r--r-- 1 m202430 mids 22156 Jan 12 13:07 d

   (5/3/0)
   3. Remove the =g= file using the =rm= command. Notice that the
      shell asked you to confirm removing the item.  Look at the
      manual for =rm=, what option must have been invoked when you
      issued that command? What option can you use to avoid having to
      confirm the removal of an item?

         -i must have been invoked
         -f forces the remove i.e. there is no confirmation step

   (5/3/1/0)
   4. Read the manual page for the =touch= command. One
      of the uses for =touch= is to update the last modified timestamp
      of a file (you can view that last modified using =ls -l=). Use
      the =touch= command to create a file =y2k= whose last
      modification time was Dec. 31 1999 at 23:59.59. Include the
      command you used on your worksheet and a copy of your =ls -l=
      output of the =y2k= file.
        
        $: touch -t 199912312359.59 y2k
        $: ls -l
        total 108
        -rw-r--r-- 1 m202430 mids  6091 Jan 12 13:07 a
        -rw-r--r-- 1 m202430 mids 12322 Jan 12 13:07 b
        -rw-r--r-- 1 m202430 mids 12214 Jan 12 13:07 c
        -rw-r--r-- 1 m202430 mids 22156 Jan 12 13:07 d
        -rw-r--r-- 1 m202430 mids 16989 Jan 12 13:07 e
        -rw-r--r-- 1 m202430 mids 13946 Jan 12 13:07 f
        -rw-r--r-- 1 m202430 mids  9894 Jan 12 13:07 g
        -rw-r--r-- 1 m202430 mids     0 Dec 31  1999 y2k
      
----------------------------------------------------------------------------
Part 2: cat, less, and more (__/25)

   (5/3/0)
   1. Use =cat= to place a "Beat Army!" at the start of Hemmingway's a
      very short story and "Go Navy!" at the end. Include the command
      you used on your worksheet.

         $: cat GoNavy.txt hemmingway.txt

  (5/3/0)
   2. Why is =less= =more=?
         Both allow for the reading of files in a terminal application
         (still the terminal but not in line).  =less= is actually more
         than =more= because it allows for more pleasurable keystrokes
         to navigate all over the place for a finger-hyper coder

   3. Use =less= to open =dickens.txt=:

      (5/3/0)
      a. Search for the first instance of "Fagin", what is the line of
         that text?

            line 2629

      (5/3/0)
      b. Find the *second to last* instance of "Fagin". Describe how
         you did that and the sentence it appears in.

            1) type "G" to get to the end of the file
            2) type "/Fagin"
            3) type "N" TWICE to get to second to last instance
            "As far from hoe, died the chief remaining members of his
            friend Fagin's gang."

      (5/3/0)
      c. Go to line 1845, what is the name of that chapter? 

            "OLIVER MINGLES WITH NEW ASSOCIATES. GOING TO A FUNERAL FOR
            THE FIRST TIME, HE FORMS AN UNFAVOURABLE NOTION OF HIS
            MASTER'S BUSINESS

----------------------------------------------------------------------------
Part 3: Viewing Files Conditionally (__/20)

   (5/3/0)
   1. Read the man pages for =head= and =less=, produce a command line
      to print the first kilobyte of the database file. Note, a
      kilobyte is 2^10 or 1024 bytes. Include the command line in your worksheet.

         $: head --bytes=1024 sample-db.csv| less

   (5/3/0)
   2. Use =less= or =grep= to find the line number of
      "Mastella". Produce a =sed= command to just print the line with
      "Mastella" and the following 5 lines. Include the command line
      in your worksheet.

         $: sed -n 37,42p sample-db.csv

   (5/3/0)
   3. How many people's first name is "Pamella"? Use =grep= to find
      that out. 

         2

   (5/3/0)
   4. Read the =man= page for grep. Print out the all the lines from
      people who *do not* have an address in NJ. Include the command
      line in your worksheet.

         $: grep -v NJ sample-db.csv

----------------------------------------------------------------------------
Part 4: Pipelines and Counting (__/30)

   (10/8/5/0)
   1. Create a pipeline to count the number of unique states
      represented in the database file. Include the pipeline in your
      worksheet.

         $: cut -d, -f 7 sample-db.csv | tail -n +2 | sort | uniq | wc -l
         45

   (10/8/5/0)
   2. How many first names in the file repeat? How many last names?
      Include the pipelines used to determine this.

         $: cut -d, -f 1 sample-db.csv | tail -n +2 | sort | uniq -d | wc -l
         10
         $: cut -d, -f 2 sample-db.csv | tail -n +2 | sort | uniq -d | wc -l
         0

   (10/8/5/0)
   
   3. Write a pipeline to first print to the terminal all the unique
      telephone area codes? This includes both sets of phone
      numbers. However, if you're unable to do that for both sets,
      provide a pipeline for at least one set. Once complete, sort the
      area codes numerically.
      (Hint: read the man page for =sort=).

         $: grep -o ',[0-9][0-9][0-9]-' sample-db.csv | sort | uniq | wc -l
         136
